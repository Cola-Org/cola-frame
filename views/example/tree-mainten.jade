extends ../.cola
append head
	style.
		.current > .tree.node .node-operation {
			display: inline-block;
		}
		.node-operation {
			display: none;
			float: right;
			padding-right: 0.5em;
		}
		.node-operation i{
			margin-right: 0.5em;
		}

block body
	.h-box(style={height:"100%"})
		.flex-box
			div(style="padding: 2px")
				div(c-widget="Panel; caption:行政区域; height:100%")
					.content
						#tree
							template(name="node-default")
								div
									span(c-bind="node.name")
									.node-operation
										i.link.icon.plus(c-onclick="add()")
										i.link.icon.trash.outline(c-onclick="remove(node)")

		.flex-box
			div(style="padding: 2px")
				div(c-widget="Panel; caption:详细信息; height:100%")
					.content
						.ui.form
							.inline.field
								label 行政区域名称
								div(c-widget="input; bind:currentEditItem.name; postOnInput:true")




append scripts
	script.
		cola(function (model) {
			model.set("node", {
				nodes: [
					{
						name: "中国",
						nodes: [
							{
								name: "上海",
								nodes: [
									{
										name: "浦东新区"
									},
									{
										name: "杨浦"
									},
									{
										name: "松江"
									}, {
										name: "徐汇区"
									}
								]
							}, {
								name: "内蒙古",
								nodes: [
									{
										name: "兴安盟"
									}, {
										name: "通辽"
									}, {
										name: "锡林郭勒"
									}, {
										name: "呼伦贝尔"
									}, {
										name: "赤峰"
									}
								]
							}
						]
					}
				]
			});

			model.action({
				remove: function (node) {
					node.remove();
				},
				add: function () {
					var currentEditItem=model.get("currentEditItem");
					var nodes = currentEditItem.get("nodes");
					if (!nodes) {
						currentEditItem.set("nodes", []);
						nodes = currentEditItem.get("nodes")
					}
					var entity=nodes.insert({
						name: "New Node"
					});
					var tree = cola.widget("tree");
					var currentNode = tree.findNode(currentEditItem);
					tree.expand(currentNode);
					tree.set("currentItem",entity);
					event && event.stopPropagation();
				}
			});

			model.widgetConfig({
				tree: {
					$type: "tree",
					autoCollapse: false,
					autoExpand: true,
					highlightCurrentItem: true,
					bind: {
						recursive: true,
						expandedProperty: "expanded",
						textProperty: "name",
						expression: "node in node.nodes"
					},

					currentNodeChange: function (self, arg) {
						var current = self.get("currentNode");
						model.set("currentEditItem", current ? current.get("data") : null);
					}
				}
			});
		});